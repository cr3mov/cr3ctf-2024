# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

# Enable support for MSVC_RUNTIME_LIBRARY
cmake_policy(SET CMP0091 NEW)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Variables
set(BUILD_SHARED_LIBS ON)

project(barcode-rev
	LANGUAGES
		CXX
)

# Target: chall
set(chall_SOURCES
	"src/main.cpp"
	"src/zxing/BarcodeFormat.cpp"
	"src/zxing/BinaryBitmap.cpp"
	"src/zxing/BitArray.cpp"
	"src/zxing/BitMatrix.cpp"
	"src/zxing/BitMatrixIO.cpp"
	"src/zxing/BitSource.cpp"
	"src/zxing/CharacterSet.cpp"
	"src/zxing/ConcentricFinder.cpp"
	"src/zxing/Content.cpp"
	"src/zxing/DecodeHints.cpp"
	"src/zxing/ECI.cpp"
	"src/zxing/GTIN.cpp"
	"src/zxing/GenericGF.cpp"
	"src/zxing/GenericGFPoly.cpp"
	"src/zxing/GlobalHistogramBinarizer.cpp"
	"src/zxing/GridSampler.cpp"
	"src/zxing/HRI.cpp"
	"src/zxing/HybridBinarizer.cpp"
	"src/zxing/MultiFormatReader.cpp"
	"src/zxing/MultiFormatWriter.cpp"
	"src/zxing/PerspectiveTransform.cpp"
	"src/zxing/ReadBarcode.cpp"
	"src/zxing/ReedSolomonDecoder.cpp"
	"src/zxing/ReedSolomonEncoder.cpp"
	"src/zxing/Result.cpp"
	"src/zxing/ResultPoint.cpp"
	"src/zxing/TextDecoder.cpp"
	"src/zxing/TextEncoder.cpp"
	"src/zxing/TextUtfEncoding.cpp"
	"src/zxing/Utf.cpp"
	"src/zxing/WhiteRectDetector.cpp"
	"src/zxing/ZXBigInteger.cpp"
	"src/zxing/aztec/AZDecoder.cpp"
	"src/zxing/aztec/AZDetector.cpp"
	"src/zxing/aztec/AZEncoder.cpp"
	"src/zxing/aztec/AZHighLevelEncoder.cpp"
	"src/zxing/aztec/AZReader.cpp"
	"src/zxing/aztec/AZToken.cpp"
	"src/zxing/aztec/AZWriter.cpp"
	"src/zxing/datamatrix/DMBitLayout.cpp"
	"src/zxing/datamatrix/DMDataBlock.cpp"
	"src/zxing/datamatrix/DMDecoder.cpp"
	"src/zxing/datamatrix/DMDetector.cpp"
	"src/zxing/datamatrix/DMECEncoder.cpp"
	"src/zxing/datamatrix/DMHighLevelEncoder.cpp"
	"src/zxing/datamatrix/DMReader.cpp"
	"src/zxing/datamatrix/DMSymbolInfo.cpp"
	"src/zxing/datamatrix/DMVersion.cpp"
	"src/zxing/datamatrix/DMWriter.cpp"
	"src/zxing/libzueci/zueci.cpp"
	"src/zxing/maxicode/MCBitMatrixParser.cpp"
	"src/zxing/maxicode/MCDecoder.cpp"
	"src/zxing/maxicode/MCReader.cpp"
	"src/zxing/oned/ODCodabarReader.cpp"
	"src/zxing/oned/ODCodabarWriter.cpp"
	"src/zxing/oned/ODCode128Patterns.cpp"
	"src/zxing/oned/ODCode128Reader.cpp"
	"src/zxing/oned/ODCode128Writer.cpp"
	"src/zxing/oned/ODCode39Reader.cpp"
	"src/zxing/oned/ODCode39Writer.cpp"
	"src/zxing/oned/ODCode93Reader.cpp"
	"src/zxing/oned/ODCode93Writer.cpp"
	"src/zxing/oned/ODDataBarCommon.cpp"
	"src/zxing/oned/ODDataBarExpandedBitDecoder.cpp"
	"src/zxing/oned/ODDataBarExpandedReader.cpp"
	"src/zxing/oned/ODDataBarReader.cpp"
	"src/zxing/oned/ODEAN13Writer.cpp"
	"src/zxing/oned/ODEAN8Writer.cpp"
	"src/zxing/oned/ODITFReader.cpp"
	"src/zxing/oned/ODITFWriter.cpp"
	"src/zxing/oned/ODMultiUPCEANReader.cpp"
	"src/zxing/oned/ODReader.cpp"
	"src/zxing/oned/ODRowReader.cpp"
	"src/zxing/oned/ODUPCAWriter.cpp"
	"src/zxing/oned/ODUPCEANCommon.cpp"
	"src/zxing/oned/ODUPCEWriter.cpp"
	"src/zxing/oned/ODWriterHelper.cpp"
	"src/zxing/pdf417/PDFBarcodeValue.cpp"
	"src/zxing/pdf417/PDFBoundingBox.cpp"
	"src/zxing/pdf417/PDFCodewordDecoder.cpp"
	"src/zxing/pdf417/PDFDecoder.cpp"
	"src/zxing/pdf417/PDFDetectionResult.cpp"
	"src/zxing/pdf417/PDFDetectionResultColumn.cpp"
	"src/zxing/pdf417/PDFDetector.cpp"
	"src/zxing/pdf417/PDFEncoder.cpp"
	"src/zxing/pdf417/PDFHighLevelEncoder.cpp"
	"src/zxing/pdf417/PDFModulusGF.cpp"
	"src/zxing/pdf417/PDFModulusPoly.cpp"
	"src/zxing/pdf417/PDFReader.cpp"
	"src/zxing/pdf417/PDFScanningDecoder.cpp"
	"src/zxing/pdf417/PDFWriter.cpp"
	"src/zxing/qrcode/QRBitMatrixParser.cpp"
	"src/zxing/qrcode/QRCodecMode.cpp"
	"src/zxing/qrcode/QRDataBlock.cpp"
	"src/zxing/qrcode/QRDecoder.cpp"
	"src/zxing/qrcode/QRDetector.cpp"
	"src/zxing/qrcode/QREncoder.cpp"
	"src/zxing/qrcode/QRErrorCorrectionLevel.cpp"
	"src/zxing/qrcode/QRFormatInformation.cpp"
	"src/zxing/qrcode/QRMaskUtil.cpp"
	"src/zxing/qrcode/QRMatrixUtil.cpp"
	"src/zxing/qrcode/QRReader.cpp"
	"src/zxing/qrcode/QRVersion.cpp"
	"src/zxing/qrcode/QRWriter.cpp"
	"src/barcode/barcode.hpp"
	"src/cube/cube.hpp"
	"src/util/logger.hpp"
	"src/util/platform.hpp"
	"src/vm/structs.hpp"
	cmake.toml
)

add_executable(chall)

target_sources(chall PRIVATE ${chall_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${chall_SOURCES})

target_compile_definitions(chall PRIVATE
	NOMINMAX
	STB_IMAGE_IMPLEMENTATION
)

target_compile_features(chall PRIVATE
	cxx_std_23
)

if(UNIX) # unix
	target_compile_options(chall PRIVATE
		-stdlib=libc++
		-fPIC
	)
endif()

if(MSVC) # msvc
	target_compile_options(chall PRIVATE
		"/MP"
	)
endif()

target_include_directories(chall PRIVATE
	"src/"
	"src/zxing/"
)

if(UNIX) # unix
	target_link_options(chall PRIVATE
		-lc++
		-fuse-ld=lld
		-Wl,--strip-debug
		-s
	)
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT chall)
endif()

