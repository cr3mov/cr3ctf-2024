#pragma once
#include "util/defines.hpp"
#include <array>
#include <cstdint>
#include <Windows.h>

#define DECL_KEY_GETTER(name, ...)                      \
    U_FORCEINL auto get_##name() {                      \
        volatile std::uint8_t result[] = {__VA_ARGS__}; \
        return result;                                  \
    }

namespace keys {
    /// Constants
    constexpr char kFlagEncryptedStart_1 = 'c' ^ COMMUNICATION_ENC_KEY; // cr3{
    constexpr char kFlagEncryptedStart_2 = 'r' ^ COMMUNICATION_ENC_KEY; // ^^^^
    constexpr char kFlagEncryptedStart_3 = '3' ^ COMMUNICATION_ENC_KEY; // ^^^^
    constexpr char kFlagEncryptedStart_4 = '{' ^ COMMUNICATION_ENC_KEY; // ^^^^
    constexpr char kFlagEncryptedStart_5 = 't' ^ COMMUNICATION_ENC_KEY; // First correct flag char
    constexpr char kFlagEncryptedStart_5_1 = 'c' ^ COMMUNICATION_ENC_KEY; // First fake flag char

    /// Size
    constexpr size_t kSize = 0x26;

    /// Encryption keys
    DECL_KEY_GETTER(keys1, 0xac, 0x23, 0xef, 0x8e, 0x92, 0xd8, 0xef, 0xc5, 0x4f, 0x99, 0x24, 0xbc, 0xc2, 0xf9, 0xbf, 0xf3, 0x37, 0xb4, 0xfb, 0x3d, 0x6c,
                    0x1b, 0x16, 0x36, 0x5, 0x30, 0x9f, 0xd6, 0x56, 0x24, 0x16, 0x7, 0xda, 0x3b, 0x48, 0x1c, 0xf7, 0xb1);
    DECL_KEY_GETTER(keys2, 0x44, 0xf, 0x0, 0x56, 0x53, 0xc1, 0x8, 0x3e, 0x2c, 0x79, 0xce, 0xc1, 0x6f, 0x7d, 0xf4, 0x4, 0xf2, 0xec, 0x35, 0x6e, 0xe4, 0xf1,
                    0xea, 0x33, 0x7e, 0x7f, 0x5c, 0x2c, 0x32, 0xb4, 0xea, 0xc7, 0x19, 0x51, 0x89, 0x92, 0x48, 0xd3);
    DECL_KEY_GETTER(encrypted_flag, 0xa9, 0x37, 0xba, 0x93, 0x97, 0x8e, 0xe7, 0xc4, 0x5b, 0xcb, 0x36, 0xef, 0xfb, 0xaf, 0xb7, 0xca, 0x37, 0xe3, 0xf3, 0x3f,
                    0x3b, 0x13, 0x17, 0xf, 0x17, 0x3e, 0xca, 0xef, 0x56, 0x23, 0x1b, 0x4, 0xe3, 0x3b, 0x42, 0x1b, 0xf6, 0xaa);
} // namespace keys

#undef DECL_KEY_GETTER
