// source: protocol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.spurdo_leveling.CInventory', null, global);
goog.exportSymbol('proto.spurdo_leveling.CInventoryEquip', null, global);
goog.exportSymbol('proto.spurdo_leveling.CLevelUp', null, global);
goog.exportSymbol('proto.spurdo_leveling.CPing', null, global);
goog.exportSymbol('proto.spurdo_leveling.ItemDetail', null, global);
goog.exportSymbol('proto.spurdo_leveling.Packet', null, global);
goog.exportSymbol('proto.spurdo_leveling.PacketId', null, global);
goog.exportSymbol('proto.spurdo_leveling.SAchievementUnlocked', null, global);
goog.exportSymbol('proto.spurdo_leveling.SInventory', null, global);
goog.exportSymbol('proto.spurdo_leveling.SInventory.Item', null, global);
goog.exportSymbol('proto.spurdo_leveling.SInventoryEquip', null, global);
goog.exportSymbol('proto.spurdo_leveling.SLevelUp', null, global);
goog.exportSymbol('proto.spurdo_leveling.SPing', null, global);
goog.exportSymbol('proto.spurdo_leveling.Wave', null, global);
goog.exportSymbol('proto.spurdo_leveling.Wave.Mob', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.ItemDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.ItemDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.ItemDetail.displayName = 'proto.spurdo_leveling.ItemDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.Wave = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spurdo_leveling.Wave.repeatedFields_, null);
};
goog.inherits(proto.spurdo_leveling.Wave, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.Wave.displayName = 'proto.spurdo_leveling.Wave';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.Wave.Mob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.Wave.Mob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.Wave.Mob.displayName = 'proto.spurdo_leveling.Wave.Mob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.CPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.CPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.CPing.displayName = 'proto.spurdo_leveling.CPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.SPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SPing.displayName = 'proto.spurdo_leveling.SPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.CInventory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.CInventory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.CInventory.displayName = 'proto.spurdo_leveling.CInventory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SInventory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spurdo_leveling.SInventory.repeatedFields_, null);
};
goog.inherits(proto.spurdo_leveling.SInventory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SInventory.displayName = 'proto.spurdo_leveling.SInventory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SInventory.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.SInventory.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SInventory.Item.displayName = 'proto.spurdo_leveling.SInventory.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.CInventoryEquip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.CInventoryEquip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.CInventoryEquip.displayName = 'proto.spurdo_leveling.CInventoryEquip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SInventoryEquip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.SInventoryEquip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SInventoryEquip.displayName = 'proto.spurdo_leveling.SInventoryEquip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.CLevelUp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.CLevelUp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.CLevelUp.displayName = 'proto.spurdo_leveling.CLevelUp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SLevelUp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.SLevelUp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SLevelUp.displayName = 'proto.spurdo_leveling.SLevelUp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.SAchievementUnlocked = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.SAchievementUnlocked, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.SAchievementUnlocked.displayName = 'proto.spurdo_leveling.SAchievementUnlocked';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spurdo_leveling.Packet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spurdo_leveling.Packet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spurdo_leveling.Packet.displayName = 'proto.spurdo_leveling.Packet';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.ItemDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.ItemDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.ItemDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.ItemDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    damage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    icon: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.ItemDetail}
 */
proto.spurdo_leveling.ItemDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.ItemDetail;
  return proto.spurdo_leveling.ItemDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.ItemDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.ItemDetail}
 */
proto.spurdo_leveling.ItemDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDamage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.ItemDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.ItemDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.ItemDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.ItemDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.spurdo_leveling.ItemDetail.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.ItemDetail.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 damage = 2;
 * @return {number}
 */
proto.spurdo_leveling.ItemDetail.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.setDamage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.clearDamage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.ItemDetail.prototype.hasDamage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.spurdo_leveling.ItemDetail.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.setIcon = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.spurdo_leveling.ItemDetail} returns this
 */
proto.spurdo_leveling.ItemDetail.prototype.clearIcon = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.ItemDetail.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spurdo_leveling.Wave.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.Wave.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.Wave.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.Wave} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Wave.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mobsList: jspb.Message.toObjectList(msg.getMobsList(),
    proto.spurdo_leveling.Wave.Mob.toObject, includeInstance),
    currentTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.Wave}
 */
proto.spurdo_leveling.Wave.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.Wave;
  return proto.spurdo_leveling.Wave.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.Wave} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.Wave}
 */
proto.spurdo_leveling.Wave.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumber(value);
      break;
    case 2:
      var value = new proto.spurdo_leveling.Wave.Mob;
      reader.readMessage(value,proto.spurdo_leveling.Wave.Mob.deserializeBinaryFromReader);
      msg.addMobs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.Wave.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.Wave.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.Wave} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Wave.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMobsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.spurdo_leveling.Wave.Mob.serializeBinaryToWriter
    );
  }
  f = message.getCurrentTime();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.Wave.Mob.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.Wave.Mob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.Wave.Mob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Wave.Mob.toObject = function(includeInstance, msg) {
  var f, obj = {
    health: jspb.Message.getFieldWithDefault(msg, 1, 0),
    damage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    invincible: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    xp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    drop: (f = msg.getDrop()) && proto.spurdo_leveling.ItemDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.Wave.Mob}
 */
proto.spurdo_leveling.Wave.Mob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.Wave.Mob;
  return proto.spurdo_leveling.Wave.Mob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.Wave.Mob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.Wave.Mob}
 */
proto.spurdo_leveling.Wave.Mob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHealth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDamage(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvincible(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXp(value);
      break;
    case 5:
      var value = new proto.spurdo_leveling.ItemDetail;
      reader.readMessage(value,proto.spurdo_leveling.ItemDetail.deserializeBinaryFromReader);
      msg.setDrop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.Wave.Mob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.Wave.Mob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.Wave.Mob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Wave.Mob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getInvincible();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getXp();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDrop();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.spurdo_leveling.ItemDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 health = 1;
 * @return {number}
 */
proto.spurdo_leveling.Wave.Mob.prototype.getHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
 */
proto.spurdo_leveling.Wave.Mob.prototype.setHealth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 damage = 2;
 * @return {number}
 */
proto.spurdo_leveling.Wave.Mob.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
 */
proto.spurdo_leveling.Wave.Mob.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool invincible = 3;
 * @return {boolean}
 */
proto.spurdo_leveling.Wave.Mob.prototype.getInvincible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
 */
proto.spurdo_leveling.Wave.Mob.prototype.setInvincible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint32 xp = 4;
 * @return {number}
 */
proto.spurdo_leveling.Wave.Mob.prototype.getXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
 */
proto.spurdo_leveling.Wave.Mob.prototype.setXp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ItemDetail drop = 5;
 * @return {?proto.spurdo_leveling.ItemDetail}
 */
proto.spurdo_leveling.Wave.Mob.prototype.getDrop = function() {
  return /** @type{?proto.spurdo_leveling.ItemDetail} */ (
    jspb.Message.getWrapperField(this, proto.spurdo_leveling.ItemDetail, 5));
};


/**
 * @param {?proto.spurdo_leveling.ItemDetail|undefined} value
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
*/
proto.spurdo_leveling.Wave.Mob.prototype.setDrop = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spurdo_leveling.Wave.Mob} returns this
 */
proto.spurdo_leveling.Wave.Mob.prototype.clearDrop = function() {
  return this.setDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.Wave.Mob.prototype.hasDrop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 number = 1;
 * @return {number}
 */
proto.spurdo_leveling.Wave.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.Wave} returns this
 */
proto.spurdo_leveling.Wave.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Mob mobs = 2;
 * @return {!Array<!proto.spurdo_leveling.Wave.Mob>}
 */
proto.spurdo_leveling.Wave.prototype.getMobsList = function() {
  return /** @type{!Array<!proto.spurdo_leveling.Wave.Mob>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.spurdo_leveling.Wave.Mob, 2));
};


/**
 * @param {!Array<!proto.spurdo_leveling.Wave.Mob>} value
 * @return {!proto.spurdo_leveling.Wave} returns this
*/
proto.spurdo_leveling.Wave.prototype.setMobsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.spurdo_leveling.Wave.Mob=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spurdo_leveling.Wave.Mob}
 */
proto.spurdo_leveling.Wave.prototype.addMobs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.spurdo_leveling.Wave.Mob, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spurdo_leveling.Wave} returns this
 */
proto.spurdo_leveling.Wave.prototype.clearMobsList = function() {
  return this.setMobsList([]);
};


/**
 * optional double current_time = 3;
 * @return {number}
 */
proto.spurdo_leveling.Wave.prototype.getCurrentTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.Wave} returns this
 */
proto.spurdo_leveling.Wave.prototype.setCurrentTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.CPing.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.CPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.CPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CPing.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.CPing}
 */
proto.spurdo_leveling.CPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.CPing;
  return proto.spurdo_leveling.CPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.CPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.CPing}
 */
proto.spurdo_leveling.CPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.CPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.CPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.CPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SPing.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SPing.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SPing}
 */
proto.spurdo_leveling.SPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SPing;
  return proto.spurdo_leveling.SPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SPing}
 */
proto.spurdo_leveling.SPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.CInventory.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.CInventory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.CInventory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CInventory.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.CInventory}
 */
proto.spurdo_leveling.CInventory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.CInventory;
  return proto.spurdo_leveling.CInventory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.CInventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.CInventory}
 */
proto.spurdo_leveling.CInventory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.CInventory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.CInventory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.CInventory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CInventory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spurdo_leveling.SInventory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SInventory.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SInventory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SInventory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventory.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.spurdo_leveling.SInventory.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SInventory}
 */
proto.spurdo_leveling.SInventory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SInventory;
  return proto.spurdo_leveling.SInventory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SInventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SInventory}
 */
proto.spurdo_leveling.SInventory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spurdo_leveling.SInventory.Item;
      reader.readMessage(value,proto.spurdo_leveling.SInventory.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SInventory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SInventory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SInventory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.spurdo_leveling.SInventory.Item.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SInventory.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SInventory.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SInventory.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventory.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipped: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    detail: (f = msg.getDetail()) && proto.spurdo_leveling.ItemDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SInventory.Item}
 */
proto.spurdo_leveling.SInventory.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SInventory.Item;
  return proto.spurdo_leveling.SInventory.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SInventory.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SInventory.Item}
 */
proto.spurdo_leveling.SInventory.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEquipped(value);
      break;
    case 2:
      var value = new proto.spurdo_leveling.ItemDetail;
      reader.readMessage(value,proto.spurdo_leveling.ItemDetail.deserializeBinaryFromReader);
      msg.setDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SInventory.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SInventory.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SInventory.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventory.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipped();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDetail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.spurdo_leveling.ItemDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool equipped = 1;
 * @return {boolean}
 */
proto.spurdo_leveling.SInventory.Item.prototype.getEquipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spurdo_leveling.SInventory.Item} returns this
 */
proto.spurdo_leveling.SInventory.Item.prototype.setEquipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ItemDetail detail = 2;
 * @return {?proto.spurdo_leveling.ItemDetail}
 */
proto.spurdo_leveling.SInventory.Item.prototype.getDetail = function() {
  return /** @type{?proto.spurdo_leveling.ItemDetail} */ (
    jspb.Message.getWrapperField(this, proto.spurdo_leveling.ItemDetail, 2));
};


/**
 * @param {?proto.spurdo_leveling.ItemDetail|undefined} value
 * @return {!proto.spurdo_leveling.SInventory.Item} returns this
*/
proto.spurdo_leveling.SInventory.Item.prototype.setDetail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spurdo_leveling.SInventory.Item} returns this
 */
proto.spurdo_leveling.SInventory.Item.prototype.clearDetail = function() {
  return this.setDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.SInventory.Item.prototype.hasDetail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.spurdo_leveling.SInventory.Item>}
 */
proto.spurdo_leveling.SInventory.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.spurdo_leveling.SInventory.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.spurdo_leveling.SInventory.Item, 1));
};


/**
 * @param {!Array<!proto.spurdo_leveling.SInventory.Item>} value
 * @return {!proto.spurdo_leveling.SInventory} returns this
*/
proto.spurdo_leveling.SInventory.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spurdo_leveling.SInventory.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spurdo_leveling.SInventory.Item}
 */
proto.spurdo_leveling.SInventory.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spurdo_leveling.SInventory.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spurdo_leveling.SInventory} returns this
 */
proto.spurdo_leveling.SInventory.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.CInventoryEquip.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.CInventoryEquip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.CInventoryEquip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CInventoryEquip.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && proto.spurdo_leveling.ItemDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.CInventoryEquip}
 */
proto.spurdo_leveling.CInventoryEquip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.CInventoryEquip;
  return proto.spurdo_leveling.CInventoryEquip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.CInventoryEquip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.CInventoryEquip}
 */
proto.spurdo_leveling.CInventoryEquip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spurdo_leveling.ItemDetail;
      reader.readMessage(value,proto.spurdo_leveling.ItemDetail.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.CInventoryEquip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.CInventoryEquip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.CInventoryEquip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CInventoryEquip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.spurdo_leveling.ItemDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemDetail item = 1;
 * @return {?proto.spurdo_leveling.ItemDetail}
 */
proto.spurdo_leveling.CInventoryEquip.prototype.getItem = function() {
  return /** @type{?proto.spurdo_leveling.ItemDetail} */ (
    jspb.Message.getWrapperField(this, proto.spurdo_leveling.ItemDetail, 1));
};


/**
 * @param {?proto.spurdo_leveling.ItemDetail|undefined} value
 * @return {!proto.spurdo_leveling.CInventoryEquip} returns this
*/
proto.spurdo_leveling.CInventoryEquip.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spurdo_leveling.CInventoryEquip} returns this
 */
proto.spurdo_leveling.CInventoryEquip.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.CInventoryEquip.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SInventoryEquip.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SInventoryEquip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SInventoryEquip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventoryEquip.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SInventoryEquip}
 */
proto.spurdo_leveling.SInventoryEquip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SInventoryEquip;
  return proto.spurdo_leveling.SInventoryEquip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SInventoryEquip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SInventoryEquip}
 */
proto.spurdo_leveling.SInventoryEquip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SInventoryEquip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SInventoryEquip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SInventoryEquip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SInventoryEquip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.spurdo_leveling.SInventoryEquip.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spurdo_leveling.SInventoryEquip} returns this
 */
proto.spurdo_leveling.SInventoryEquip.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.CLevelUp.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.CLevelUp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.CLevelUp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CLevelUp.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.CLevelUp}
 */
proto.spurdo_leveling.CLevelUp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.CLevelUp;
  return proto.spurdo_leveling.CLevelUp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.CLevelUp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.CLevelUp}
 */
proto.spurdo_leveling.CLevelUp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.CLevelUp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.CLevelUp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.CLevelUp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.CLevelUp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 item = 1;
 * @return {number}
 */
proto.spurdo_leveling.CLevelUp.prototype.getItem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.spurdo_leveling.CLevelUp} returns this
 */
proto.spurdo_leveling.CLevelUp.prototype.setItem = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SLevelUp.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SLevelUp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SLevelUp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SLevelUp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SLevelUp}
 */
proto.spurdo_leveling.SLevelUp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SLevelUp;
  return proto.spurdo_leveling.SLevelUp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SLevelUp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SLevelUp}
 */
proto.spurdo_leveling.SLevelUp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SLevelUp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SLevelUp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SLevelUp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SLevelUp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.SAchievementUnlocked.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.SAchievementUnlocked.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.SAchievementUnlocked} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SAchievementUnlocked.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.SAchievementUnlocked}
 */
proto.spurdo_leveling.SAchievementUnlocked.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.SAchievementUnlocked;
  return proto.spurdo_leveling.SAchievementUnlocked.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.SAchievementUnlocked} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.SAchievementUnlocked}
 */
proto.spurdo_leveling.SAchievementUnlocked.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.SAchievementUnlocked.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.SAchievementUnlocked.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.SAchievementUnlocked} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.SAchievementUnlocked.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.spurdo_leveling.SAchievementUnlocked.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.spurdo_leveling.SAchievementUnlocked} returns this
 */
proto.spurdo_leveling.SAchievementUnlocked.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spurdo_leveling.Packet.prototype.toObject = function(opt_includeInstance) {
  return proto.spurdo_leveling.Packet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spurdo_leveling.Packet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Packet.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spurdo_leveling.Packet}
 */
proto.spurdo_leveling.Packet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spurdo_leveling.Packet;
  return proto.spurdo_leveling.Packet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spurdo_leveling.Packet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spurdo_leveling.Packet}
 */
proto.spurdo_leveling.Packet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.spurdo_leveling.PacketId} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.Packet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spurdo_leveling.Packet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spurdo_leveling.Packet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spurdo_leveling.Packet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional PacketId type = 1;
 * @return {!proto.spurdo_leveling.PacketId}
 */
proto.spurdo_leveling.Packet.prototype.getType = function() {
  return /** @type {!proto.spurdo_leveling.PacketId} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.spurdo_leveling.PacketId} value
 * @return {!proto.spurdo_leveling.Packet} returns this
 */
proto.spurdo_leveling.Packet.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.spurdo_leveling.Packet.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.spurdo_leveling.Packet.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.spurdo_leveling.Packet.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.spurdo_leveling.Packet} returns this
 */
proto.spurdo_leveling.Packet.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.spurdo_leveling.Packet} returns this
 */
proto.spurdo_leveling.Packet.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spurdo_leveling.Packet.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.spurdo_leveling.PacketId = {
  PACKET_ID_PING: 0,
  PACKET_ID_WAVE: 1,
  PACKET_ID_INVENTORY: 2,
  PACKET_ID_INVENTORY_EQUIP: 3,
  PACKET_ID_LEVEL_UP: 4,
  PACKET_ID_ACHIEVEMENT_UNLOCKED: 5
};

goog.object.extend(exports, proto.spurdo_leveling);
